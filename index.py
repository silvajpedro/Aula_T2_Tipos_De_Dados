# ğŸ“Œ VariÃ¡veis  
# SÃ£o como caixinhas que armazenam informaÃ§Ãµes para serem usadas no cÃ³digo.  
# Em Python, NÃƒO existe `var`, `let` ou `const` como no JavaScript.  
# Basta dar um nome Ã  variÃ¡vel e atribuir um valor a ela.  

# ğŸ”¹ ConvenÃ§Ãµes de NomeaÃ§Ã£o de VariÃ¡veis  
# CamelCase â†’ Estilo mais usado no JavaScript  
pratoDaSemana = "picanha ao molho gorgonzola com fritas"  

# Snake_Case â†’ PadrÃ£o mais comum no Python  
prato_da_semana = "Escondidinho de Macaxeira com Carne de Sol"  

prato_da_semana = 3.14  # O Python permite reatribuir variÃ¡veis com tipos diferentes  

# ğŸ“Œ Tipos de Dados em Python  

# ğŸ”¹ Inteiros (int)  
# Representam nÃºmeros inteiros (positivos ou negativos), sem ponto decimal.  
preco_escondidinho = 20  
divida_fernanda = -100  

# ğŸ”¹ Ponto Flutuante ou Decimal (float)  
# Representam nÃºmeros que possuem casas decimais.  
preco_picanha = 39.90  
pi = -3.14  

# ğŸ”¹ Strings (str)  
# SequÃªncias de caracteres envolvidas por aspas simples ('') ou duplas ("").  
prato_dia = "Lasanha de CamarÃ£o com Catupiry com 3 acompanhamentos"  
numero_da_sorte = "7"  # Mesmo sendo um nÃºmero, estÃ¡ dentro de aspas, entÃ£o Ã© uma string  

# ğŸ”¹ Booleanos (bool)  
# Representam valores lÃ³gicos: Verdadeiro (True) ou Falso (False).  
maior_de_idade = True  
conta_tem_saldo = False  

# ğŸ“Œ Verificando o tipo de dado usando `type()`  
print(type(conta_tem_saldo))  # SaÃ­da: <class 'bool'>  

# ğŸ”¹ Nulos (None)  
# Representam ausÃªncia de valor ou variÃ¡veis ainda nÃ£o inicializadas.  
valor_nulo = None  

# Verificando o tipo da variÃ¡vel  
print(type(maior_de_idade))  # SaÃ­da: <class 'bool'>  

# ğŸ“Œ OperaÃ§Ãµes MatemÃ¡ticas  
primeiro_valor = 5.89  
segundo_valor = 13.7895
